{"version":3,"sources":["components/works/WorkBody.tsx","pages/Works.tsx","images/logo.svg","components/Navbar.tsx","constants/Constants.tsx","components/WorkWrapper.tsx","components/LoadingCard.tsx"],"names":["WorkBody","props","useQuery","axios","get","WorkDataURL","cacheTime","isLoading","data","Body","Cover","Title","TitleText","DoBox","map","index","LoadingCard","WorkWrapper","src","image","slug","title","label","id","styled","div","RuthTheme","white","Header3","React","memo","Work","useEffect","document","Navbar","useState","menu","setMenu","location","useLocation","NavLogo","to","Logo","logo","alt","LogoText","NavLinks","toggle","NavUL","NavLI","href","target","rel","MobileToggle","onClick","MobileCover","TopTog","MiddleTog","BottomTog","nav","span","img","TinySub","primary","ul","li","host","HomeWorkDataURL","WorkDetailURL","ContactURL","WorkLinkHref","ImageCover","Label","LabelText","ImageWrapper","WorkLink","WorkText","width","height","viewBox","fill","xmlns","d","stroke","stroke-width","stroke-linecap","stroke-linejoin","Link","SmallSub","Header4","LightSmallSub","animationLoading","keyframes","Shimmer","ShimmerHalf","Image","Text","SmallText"],"mappings":"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","file":"static/js/5.75652d89.chunk.js","sourcesContent":["import WorkWrapper from \"components/WorkWrapper\"\r\nimport styled from \"styled-components\"\r\n\r\nimport { RuthTheme } from \"styles/ColorStyles\"\r\nimport { Header3 } from \"styles/TextStyles\"\r\nimport { useQuery } from \"react-query\"\r\nimport { WorkDataURL } from \"constants/Constants\"\r\nimport React, { FC } from \"react\"\r\nimport axios from \"axios\"\r\nimport LoadingCard from \"components/LoadingCard\"\r\n\r\nconst WorkBody: FC = (props) => {\r\n  const fetchWorks = () => {\r\n    return axios.get(WorkDataURL)\r\n  }\r\n\r\n  const { isLoading, data } = useQuery(\"page-works\", fetchWorks, {\r\n    cacheTime: 10000,\r\n  })\r\n\r\n  return (\r\n    <Body>\r\n      <Cover>\r\n        <Title>\r\n          <TitleText>My work</TitleText>\r\n        </Title>\r\n\r\n        <DoBox>\r\n          {isLoading &&\r\n            [1, 2].map((data, index) => <LoadingCard key={index} />)}\r\n          {data &&\r\n            data.data.map((data: any) => (\r\n              <WorkWrapper\r\n                key={data.id}\r\n                src={data.image}\r\n                slug={`${data.slug}`}\r\n                title={data.title}\r\n                label={data.label}\r\n              />\r\n            ))}\r\n        </DoBox>\r\n      </Cover>\r\n    </Body>\r\n  )\r\n}\r\n\r\nconst Body = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  margin: 0;\r\n`\r\n\r\nconst Cover = styled.div`\r\n  max-width: 1600px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 24px auto;\r\n  min-height: 500px;\r\n  height: 100%;\r\n`\r\nconst Title = styled.div`\r\n  max-width: 350px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 80px auto 24px auto;\r\n  min-height: 40px;\r\n  height: 100%;\r\n  padding: 16px;\r\n  position: relative;\r\n  @media only screen and (max-width: 650px) {\r\n    max-width: 180px;\r\n  }\r\n\r\n  ::after {\r\n    position: absolute;\r\n    content: \"\";\r\n    left: 0;\r\n    bottom: -4px;\r\n    width: 100%;\r\n    height: 6px;\r\n    background: ${RuthTheme.white};\r\n    border-radius: 0px;\r\n  }\r\n`\r\nconst TitleText = styled(Header3)`\r\n  color: ${RuthTheme.white};\r\n`\r\nconst DoBox = styled.div`\r\n  margin: 64px auto;\r\n  max-width: 1278px;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 32px;\r\n  padding: 16px;\r\n  place-items: center;\r\n  justify-content: center;\r\n\r\n  grid-gap: 32px;\r\n\r\n  @media only screen and (max-width: 650px) {\r\n    margin: 40px 0;\r\n    place-items: center;\r\n    justify-content: center;\r\n    gap: 16px;\r\n    grid-gap: 16px;\r\n\r\n    grid-template-columns: repeat(1, 1fr);\r\n  }\r\n`\r\n\r\nexport default React.memo(WorkBody)\r\n","import WorkBody from \"components/works/WorkBody\"\r\nimport React, { FC, useEffect } from \"react\"\r\nimport Navbar from \"components/Navbar\"\r\nimport styled from \"styled-components\"\r\n\r\nconst Work: FC = () => {\r\n  useEffect(() => {\r\n    document.title = \"My Works - Ruth Ikegah\"\r\n  }, [])\r\n\r\n  return (\r\n    <Body>\r\n      <Navbar />\r\n      <WorkBody />\r\n    </Body>\r\n  )\r\n}\r\nconst Body = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  margin: 0;\r\n`\r\nexport default React.memo(Work)\r\n","export default __webpack_public_path__ + \"static/media/logo.f5ae31b6.svg\";","import React, { FC, useEffect, useState } from \"react\"\r\nimport { Link, NavLink, useLocation } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\nimport { RuthTheme } from \"styles/ColorStyles\"\r\nimport { TinySub } from \"styles/TextStyles\"\r\nimport logo from \"images/logo.svg\"\r\n\r\ninterface NavbarProps {\r\n  toggle: any\r\n}\r\nconst Navbar: FC = () => {\r\n  const [menu, setMenu] = useState<boolean>(false)\r\n\r\n  const location = useLocation()\r\n  useEffect(() => {\r\n    setMenu(false)\r\n  }, [location])\r\n\r\n  const clickToggle = () => {\r\n    setMenu(!menu)\r\n  }\r\n  return (\r\n    <Body>\r\n      <Cover>\r\n        <NavLogo>\r\n          <Link to=\"/\">\r\n            <Logo src={logo} alt=\"Ruth Ikegah Logo\" />\r\n            <LogoText>Developer Advocate + GitHub Star </LogoText>\r\n          </Link>\r\n        </NavLogo>\r\n        <NavLinks toggle={menu}>\r\n          <NavUL>\r\n            <NavLink to=\"/works\">\r\n              <NavLI>Work/Speaking</NavLI>\r\n            </NavLink>\r\n            <NavLink to=\"/about\">\r\n              <NavLI>About</NavLI>\r\n            </NavLink>\r\n            <a\r\n              href=\"https://ruthikegah.xyz/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <NavLI>Blog</NavLI>\r\n            </a>\r\n            <NavLink to=\"/contact\">\r\n              <NavLI>Contact</NavLI>\r\n            </NavLink>\r\n          </NavUL>\r\n        </NavLinks>\r\n        <MobileToggle onClick={clickToggle}>\r\n          <MobileCover>\r\n            <TopTog toggle={menu} />\r\n            <MiddleTog toggle={menu} />\r\n            <BottomTog toggle={menu} />\r\n          </MobileCover>\r\n        </MobileToggle>\r\n      </Cover>\r\n    </Body>\r\n  )\r\n}\r\n\r\nconst Body = styled.nav`\r\n  position: absolute;\r\n  z-index: 40;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 64px;\r\n  background: transparent;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`\r\nconst Cover = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 1280px;\r\n  margin: 0 auto;\r\n  padding: 16px;\r\n`\r\n\r\nconst MobileToggle = styled.div`\r\n  position: fixed;\r\n  width: 48px;\r\n  height: 20px;\r\n  right: 16px;\r\n  top: 32px;\r\n  display: none;\r\n\r\n  z-index: 63;\r\n  @media only screen and (max-width: 800px) {\r\n    display: flex;\r\n  }\r\n`\r\nconst MobileCover = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 48px;\r\n  height: 20px;\r\n\r\n  cursor: pointer;\r\n  transition: 0.4s ease-in;\r\n`\r\nconst TopTog = styled.span<NavbarProps>`\r\n  width: 48px;\r\n  height: 2px;\r\n  background: ${RuthTheme.white};\r\n  border-radius: 10px;\r\n  transition: 0.4s ease-in;\r\n  cursor: pointer;\r\n  transform: ${(props) =>\r\n    props.toggle ? \" rotate(45deg) translate(-5px,6px)\" : \"rotate(0)\"};\r\n`\r\nconst MiddleTog = styled.span<NavbarProps>`\r\n  width: 48px;\r\n  height: 2px;\r\n  transition: 0.4s ease-in;\r\n  background: ${RuthTheme.white};\r\n  margin: 4px 0;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  display: ${(props) => (props.toggle ? \"none\" : \"flex\")};\r\n`\r\nconst BottomTog = styled.span<NavbarProps>`\r\n  width: 48px;\r\n  height: 2px;\r\n  background: ${RuthTheme.white};\r\n  border-radius: 10px;\r\n  transition: 0.4s ease-in;\r\n  cursor: pointer;\r\n  transform: ${(props) =>\r\n    props.toggle ? \" rotate(-45deg) translate(-5px,-6px)\" : \"rotate(0)\"};\r\n`\r\nconst NavLogo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n\r\n  a {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n  }\r\n`\r\nconst Logo = styled.img`\r\n  height: 40px;\r\n  width: 105px;\r\n`\r\nconst LogoText = styled(TinySub)`\r\n  color: ${RuthTheme.white};\r\n`\r\nconst NavLinks = styled.div<NavbarProps>`\r\n  @media only screen and (max-width: 800px) {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    transition: 0.4s ease-in;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 64px 16px;\r\n    background: ${RuthTheme.primary};\r\n    z-index: 62;\r\n    transform: ${(props) =>\r\n      props.toggle ? \"translateY(0px)\" : \"translateY(-2000px)\"};\r\n    /* align-items: center; */\r\n  }\r\n`\r\nconst NavUL = styled.ul`\r\n  display: flex;\r\n  flex-direction: row;\r\n  a {\r\n    margin: 8px;\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    flex-direction: column;\r\n  }\r\n`\r\nconst NavLI = styled.li`\r\n  height: 40px;\r\n  max-width: 209px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 40px;\r\n  padding: 11px 34px;\r\n  border: 0.8px solid ${RuthTheme.white};\r\n  transition: 0.4s ease-in;\r\n  color: ${RuthTheme.white};\r\n  font-family: \"Neue Machina Bold\";\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 18px;\r\n  background: transparent;\r\n\r\n  :hover {\r\n    color: ${RuthTheme.primary};\r\n    background: ${RuthTheme.white};\r\n  }\r\n`\r\nexport default React.memo(Navbar)\r\n","export const host =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? \"http://127.0.0.1:8000/\"\r\n    : \"https://api.ruthikegah.com/\"\r\n\r\nexport const HomeWorkDataURL = `${host}api/home-work/`\r\nexport const WorkDataURL = `${host}api/work/`\r\nexport const WorkDetailURL = (slug: any) => `${host}api/work/${slug}/`\r\nexport const ContactURL = `${host}api/contact/`\r\n","import React, { FC } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { RuthTheme } from \"styles/ColorStyles\"\r\nimport { Header4, SmallSub, LightSmallSub } from \"styles/TextStyles\"\r\n\r\ninterface WorkProps {\r\n  title: string | any\r\n  label: string | any\r\n  slug: string | any\r\n\r\n  src: any\r\n}\r\nconst WorkWrapper: FC<WorkProps> = (props) => {\r\n  const { slug, src, title, label } = props\r\n  return (\r\n    <Body>\r\n      <WorkLinkHref to={`/work/${slug}`}></WorkLinkHref>\r\n      <ImageCover>\r\n        <Label>\r\n          <LabelText>{label}</LabelText>\r\n        </Label>\r\n        <ImageWrapper src={src} alt={title} />\r\n      </ImageCover>\r\n\r\n      <Title>{title}</Title>\r\n      <Link to={`/work/${slug}`}>\r\n        <WorkLink>\r\n          <WorkText> View project</WorkText>\r\n          <svg\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M7 17L17 7\"\r\n              stroke=\"white\"\r\n              stroke-width=\"2\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            />\r\n            <path\r\n              d=\"M17 17V7H7\"\r\n              stroke=\"white\"\r\n              stroke-width=\"2\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            />\r\n          </svg>\r\n        </WorkLink>\r\n      </Link>\r\n    </Body>\r\n  )\r\n}\r\nconst Body = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 600px;\r\n\r\n  min-height: 250px;\r\n  height: 100%;\r\n  margin: 24px auto;\r\n`\r\nconst Label = styled.div`\r\n  max-width: 120px;\r\n  width: 100%;\r\n  height: 34px;\r\n  border-radius: 40px;\r\n  padding: 10px, 16px, 10px, 16px;\r\n  border: 1px solid ${RuthTheme.white};\r\n  color: ${RuthTheme.white};\r\n  position: absolute;\r\n  z-index: 6;\r\n  top: 30px;\r\n  left: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst WorkLinkHref = styled(Link)`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 2;\r\n  object-fit: cover;\r\n`\r\nconst LabelText = styled(SmallSub)`\r\n  color: ${RuthTheme.white};\r\n`\r\nconst ImageCover = styled.div`\r\n  max-width: 600px;\r\n  max-height: 400px;\r\n  min-height: 250px;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n\r\n  ::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    background: rgba(0, 0, 0, 0.4);\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 1;\r\n  }\r\n`\r\nconst ImageWrapper = styled.img`\r\n  max-width: 600px;\r\n  max-height: 400px;\r\n  min-height: 250px;\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\nconst Title = styled(Header4)`\r\n  margin: 32px 0 16px 0;\r\n  color: ${RuthTheme.white};\r\n`\r\n\r\nconst WorkLink = styled.span`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  color: ${RuthTheme.white};\r\n  transition: 0.5s ease-in;\r\n\r\n  :hover svg {\r\n    transform: rotate(45deg);\r\n  }\r\n  svg {\r\n    width: 24px;\r\n    height: 24px;\r\n    transition: 0.3s ease-in;\r\n    ${Body}:hover & {\r\n      transform: rotate(45deg);\r\n    }\r\n  }\r\n`\r\n\r\nconst WorkText = styled(LightSmallSub)`\r\n  color: ${RuthTheme.white};\r\n\r\n  margin: 0 10px 0 0;\r\n`\r\nexport default React.memo(WorkWrapper)\r\n","import React from \"react\"\r\nimport styled, { keyframes } from \"styled-components\"\r\n\r\nconst LoadingCard = () => {\r\n  return (\r\n    <Body>\r\n      <Image />\r\n      <Text />\r\n      <SmallText />\r\n      <SmallText />\r\n      <Shimmer>\r\n        <ShimmerHalf />\r\n      </Shimmer>\r\n    </Body>\r\n  )\r\n}\r\n\r\nconst Body = styled.div`\r\n  height: 350px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  background: #f2f2f2;\r\n  margin: 8px 0;\r\n  padding: 24px;\r\n  overflow: hidden;\r\n  position: relative;\r\n`\r\nconst animationLoading = keyframes`\r\n0%{\r\ntransform: translateX(-150%);\r\n}\r\n\r\n50%{\r\n    transform: translateX(-60%);\r\n}\r\n100%{\r\n    transform: translateX(150%);\r\n}\r\n`\r\n\r\nconst Shimmer = styled.div`\r\n  width: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100%;\r\n  position: absolute;\r\n  animation: ${animationLoading} 1.5s infinite;\r\n`\r\n\r\nconst ShimmerHalf = styled.div`\r\n  width: 50%;\r\n  height: 100%;\r\n  transform: skewX(-20deg);\r\n  background: rgba(255, 255, 255, 0.8);\r\n`\r\nconst Image = styled.div`\r\n  height: 180px;\r\n  width: 100%;\r\n  margin: 16px 0;\r\n  background: #ddd;\r\n`\r\nconst Text = styled.div`\r\n  height: 30px;\r\n  margin: 8px 0;\r\n  width: 100%;\r\n  background: #ddd;\r\n`\r\nconst SmallText = styled.div`\r\n  height: 10px;\r\n  width: 50%;\r\n  margin: 8px 0;\r\n  background: #ddd;\r\n`\r\nexport default LoadingCard\r\n"],"sourceRoot":""}