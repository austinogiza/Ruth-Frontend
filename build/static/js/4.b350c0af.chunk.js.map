{"version":3,"sources":["components/WorkWrapper.tsx","images/ruthwork.png","components/works/WorkBody.tsx","pages/Works.tsx"],"names":["Body","styled","div","Label","RuthTheme","white","WorkLinkHref","Link","LabelText","SmallSub","ImageCover","ImageWrapper","img","Title","Header4","WorkLink","span","WorkText","LightSmallSub","WorkWrapper","props","slug","src","title","label","to","alt","width","height","viewBox","fill","xmlns","d","stroke","stroke-width","stroke-linecap","stroke-linejoin","Cover","TitleText","Header3","DoBox","WorkBody","work","Work","useEffect","document"],"mappings":"8JAwDMA,EAAOC,IAAOC,IAAV,uJASJC,EAAQF,IAAOC,IAAV,+TAMWE,IAAUC,MACrBD,IAAUC,OAUfC,EAAeL,YAAOM,IAAPN,CAAH,kJAUZO,EAAYP,YAAOQ,IAAPR,CAAH,0CACJG,IAAUC,OAEfK,EAAaT,IAAOC,IAAV,0UAmBVS,EAAeV,IAAOW,IAAV,8HAOZC,EAAQZ,YAAOa,IAAPb,CAAH,oEAEAG,IAAUC,OAGfU,EAAWd,IAAOe,KAAV,4WAKHZ,IAAUC,MAUfL,GAMAiB,EAAWhB,YAAOiB,IAAPjB,CAAH,mEACHG,IAAUC,OAINc,IA3IoB,SAACC,GAAW,IACrCC,EAA4BD,EAA5BC,KAAMC,EAAsBF,EAAtBE,IAAKC,EAAiBH,EAAjBG,MAAOC,EAAUJ,EAAVI,MAC1B,OACE,eAACxB,EAAD,WACE,cAACM,EAAD,CAAcmB,GAAE,gBAAWJ,KAC3B,eAACX,EAAD,WACE,cAACP,EAAD,UACE,cAACK,EAAD,UAAYgB,MAEd,cAACb,EAAD,CAAcW,IAAKA,EAAKI,IAAKH,OAG/B,cAACV,EAAD,UAAQU,IACR,cAAC,IAAD,CAAME,GAAE,gBAAWJ,GAAnB,SACE,eAACN,EAAD,WACE,cAACE,EAAD,4BACA,sBACEU,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,UAOE,sBACEC,EAAE,aACFC,OAAO,QACPC,eAAa,IACbC,iBAAe,QACfC,kBAAgB,UAElB,sBACEJ,EAAE,aACFC,OAAO,QACPC,eAAa,IACbC,iBAAe,QACfC,kBAAgB,uB,gCChDf,QAA0B,sC,yGC6CnCpC,EAAOC,IAAOC,IAAV,2JAUJmC,EAAQpC,IAAOC,IAAV,yKASLW,EAAQZ,IAAOC,IAAV,sbAoBOE,IAAUC,OAItBiC,EAAYrC,YAAOsC,IAAPtC,CAAH,0CACJG,IAAUC,OAEfmC,EAAQvC,IAAOC,IAAV,mdAwBIuC,EA7GE,WACf,OACE,cAACzC,EAAD,UACE,eAACqC,EAAD,WACE,cAACxB,EAAD,UACE,cAACyB,EAAD,wBAGF,eAACE,EAAD,WACE,cAACrB,EAAA,EAAD,CACEG,IAAKoB,IACLrB,KAAK,QACLG,MAAM,QACND,MAAM,0CAER,cAACJ,EAAA,EAAD,CACEG,IAAKoB,IACLrB,KAAK,QACLG,MAAM,QACND,MAAM,0CAER,cAACJ,EAAA,EAAD,CACEG,IAAKoB,IACLrB,KAAK,QACLG,MAAM,QACND,MAAM,0CAER,cAACJ,EAAA,EAAD,CACEG,IAAKoB,IACLrB,KAAK,QACLG,MAAM,QACND,MAAM,mD,OCvBHoB,UAXE,WAIf,OAHAC,qBAAU,WACRC,SAAStB,MAAQ,2BAChB,IAED,mCACE,cAAC,EAAD","file":"static/js/4.b350c0af.chunk.js","sourcesContent":["import { FC } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { RuthTheme } from \"styles/ColorStyles\"\r\nimport { Header4, SmallSub, LightSmallSub } from \"styles/TextStyles\"\r\n\r\ninterface WorkProps {\r\n  slug: string\r\n  title: string\r\n  src: any\r\n  label: string\r\n}\r\nconst WorkWrapper: FC<WorkProps> = (props) => {\r\n  const { slug, src, title, label } = props\r\n  return (\r\n    <Body>\r\n      <WorkLinkHref to={`/work/${slug}`}></WorkLinkHref>\r\n      <ImageCover>\r\n        <Label>\r\n          <LabelText>{label}</LabelText>\r\n        </Label>\r\n        <ImageWrapper src={src} alt={title} />\r\n      </ImageCover>\r\n\r\n      <Title>{title}</Title>\r\n      <Link to={`/work/${slug}`}>\r\n        <WorkLink>\r\n          <WorkText> View project</WorkText>\r\n          <svg\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M7 17L17 7\"\r\n              stroke=\"white\"\r\n              stroke-width=\"2\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            />\r\n            <path\r\n              d=\"M17 17V7H7\"\r\n              stroke=\"white\"\r\n              stroke-width=\"2\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            />\r\n          </svg>\r\n        </WorkLink>\r\n      </Link>\r\n    </Body>\r\n  )\r\n}\r\nconst Body = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 600px;\r\n\r\n  min-height: 250px;\r\n  height: 100%;\r\n  margin: 24px auto;\r\n`\r\nconst Label = styled.div`\r\n  max-width: 120px;\r\n  width: 100%;\r\n  height: 34px;\r\n  border-radius: 40px;\r\n  padding: 10px, 16px, 10px, 16px;\r\n  border: 1px solid ${RuthTheme.white};\r\n  color: ${RuthTheme.white};\r\n  position: absolute;\r\n  z-index: 6;\r\n  top: 30px;\r\n  left: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst WorkLinkHref = styled(Link)`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 2;\r\n  object-fit: cover;\r\n`\r\nconst LabelText = styled(SmallSub)`\r\n  color: ${RuthTheme.white};\r\n`\r\nconst ImageCover = styled.div`\r\n  max-width: 600px;\r\n  max-height: 400px;\r\n  min-height: 250px;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n\r\n  ::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    background: rgba(0, 0, 0, 0.4);\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 1;\r\n  }\r\n`\r\nconst ImageWrapper = styled.img`\r\n  max-width: 600px;\r\n  max-height: 400px;\r\n  min-height: 250px;\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\nconst Title = styled(Header4)`\r\n  margin: 32px 0 16px 0;\r\n  color: ${RuthTheme.white};\r\n`\r\n\r\nconst WorkLink = styled.span`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  color: ${RuthTheme.white};\r\n  transition: 0.5s ease-in;\r\n\r\n  :hover svg {\r\n    transform: rotate(45deg);\r\n  }\r\n  svg {\r\n    width: 24px;\r\n    height: 24px;\r\n    transition: 0.3s ease-in;\r\n    ${Body}:hover & {\r\n      transform: rotate(45deg);\r\n    }\r\n  }\r\n`\r\n\r\nconst WorkText = styled(LightSmallSub)`\r\n  color: ${RuthTheme.white};\r\n\r\n  margin: 0 10px 0 0;\r\n`\r\nexport default WorkWrapper\r\n","export default __webpack_public_path__ + \"static/media/ruthwork.bd9c55f1.png\";","import WorkWrapper from \"components/WorkWrapper\"\r\nimport styled from \"styled-components\"\r\n\r\nimport { RuthTheme } from \"styles/ColorStyles\"\r\nimport { Header3 } from \"styles/TextStyles\"\r\nimport work from \"images/ruthwork.png\"\r\nconst WorkBody = () => {\r\n  return (\r\n    <Body>\r\n      <Cover>\r\n        <Title>\r\n          <TitleText>My work</TitleText>\r\n        </Title>\r\n\r\n        <DoBox>\r\n          <WorkWrapper\r\n            src={work}\r\n            slug=\"hello\"\r\n            label=\"hello\"\r\n            title=\"How to Write an Enticing Cover Letter\"\r\n          />\r\n          <WorkWrapper\r\n            src={work}\r\n            slug=\"hello\"\r\n            label=\"hello\"\r\n            title=\"How to Write an Enticing Cover Letter\"\r\n          />\r\n          <WorkWrapper\r\n            src={work}\r\n            slug=\"hello\"\r\n            label=\"hello\"\r\n            title=\"How to Write an Enticing Cover Letter\"\r\n          />\r\n          <WorkWrapper\r\n            src={work}\r\n            slug=\"hello\"\r\n            label=\"hello\"\r\n            title=\"How to Write an Enticing Cover Letter\"\r\n          />\r\n        </DoBox>\r\n      </Cover>\r\n    </Body>\r\n  )\r\n}\r\n\r\nconst Body = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 80px 0;\r\n\r\n  @media only screen and (max-width: 650px) {\r\n    margin: 40px 0;\r\n  }\r\n`\r\n\r\nconst Cover = styled.div`\r\n  max-width: 1600px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n  min-height: 500px;\r\n  height: 100%;\r\n`\r\nconst Title = styled.div`\r\n  max-width: 350px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0 auto;\r\n  min-height: 40px;\r\n  height: 100%;\r\n  padding: 16px;\r\n  position: relative;\r\n\r\n  ::after {\r\n    position: absolute;\r\n    content: \"\";\r\n    left: 0;\r\n    bottom: -4px;\r\n    width: 100%;\r\n    height: 6px;\r\n    background: ${RuthTheme.white};\r\n    border-radius: 0px;\r\n  }\r\n`\r\nconst TitleText = styled(Header3)`\r\n  color: ${RuthTheme.white};\r\n`\r\nconst DoBox = styled.div`\r\n  margin: 64px auto;\r\n  max-width: 1278px;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 32px;\r\n  padding: 16px;\r\n  place-items: center;\r\n  justify-content: center;\r\n\r\n  grid-gap: 32px;\r\n\r\n  @media only screen and (max-width: 650px) {\r\n    margin: 40px 0;\r\n    place-items: center;\r\n    justify-content: center;\r\n    gap: 16px;\r\n    grid-gap: 16px;\r\n\r\n    grid-template-columns: repeat(1, 1fr);\r\n  }\r\n`\r\n\r\nexport default WorkBody\r\n","import WorkBody from \"components/works/WorkBody\"\r\nimport { FC, useEffect } from \"react\"\r\n\r\nconst Work: FC = () => {\r\n  useEffect(() => {\r\n    document.title = \"My Works - Ruth Ikegah\"\r\n  }, [])\r\n  return (\r\n    <>\r\n      <WorkBody />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Work\r\n"],"sourceRoot":""}