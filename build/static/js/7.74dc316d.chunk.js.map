{"version":3,"sources":["components/Loader.tsx","components/Notification.tsx","styles/InputStyles.tsx","components/contact/ContactForm.tsx","components/contact/ContactHero.tsx","pages/Contact.tsx","styles/ButtonStyles.tsx","images/logo.svg","components/Navbar.tsx","constants/Constants.tsx","container/Wrapper.tsx"],"names":["Loader","radius","color","stroke","visible","Body","styled","div","RuthTheme","white","primary","Cover","MessageText","LightTinySub","CloseIcon","VscChromeClose","Notification","props","close","useState","scroll","setScroll","useEffect","window","addEventListener","scrollY","pageYOffset","onClick","MainInput","input","MainTextArea","textarea","Wrapper","BodyWrapper","FormTitle","Title","Header5","FormCover","FormBody","form","FormWrapper","FormLabel","label","FormText","TinySub","FormInput","FormTextArea","FormWrap","FormButton","FormBut","Error","span","secondary","ErrorText","ContactForm","initial","name","email","message","setForm","timer","setTimer","emailError","setEmailError","nameError","setNameError","messageError","setMessageError","loading","setLoading","sent","setSent","onChange","e","target","value","setInterval","onSubmit","preventDefault","trim","includes","axios","post","ContactURL","then","res","catch","err","htmlFor","id","type","placeholder","ContactText","h1","ContactHero","Navbar","Contact","document","title","MainButton","button","black","BlogButton","a","BorderButton","nav","MobileToggle","MobileCover","TopTog","toggle","MiddleTog","BottomTog","NavLogo","Logo","img","LogoText","NavLinks","NavUL","ul","NavLI","li","menu","setMenu","location","useLocation","to","src","logo","alt","href","rel","host","HomeWorkDataURL","WorkDataURL","WorkDetailURL","slug"],"mappings":"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","file":"static/js/7.74dc316d.chunk.js","sourcesContent":["import Spinner from \"react-spinner-material\"\r\nimport React from \"react\"\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div>\r\n      <Spinner radius={24} color={\"#333\"} stroke={2} visible={true} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React, { FC, useEffect, useState } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { RuthTheme } from \"styles/ColorStyles\"\r\nimport { LightTinySub } from \"styles/TextStyles\"\r\nimport { VscChromeClose } from \"react-icons/vsc\"\r\ninterface NotiProps {\r\n  close: () => void\r\n}\r\n\r\ninterface ScrollProps {\r\n  scroll: any\r\n}\r\nconst Notification: FC<NotiProps> = (props) => {\r\n  const { close } = props\r\n  const [scroll, setScroll] = useState<boolean>(false)\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 400 || window.pageYOffset > 400) {\r\n        setScroll(true)\r\n      } else {\r\n        setScroll(false)\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <Body scroll={scroll}>\r\n      <CloseIcon onClick={close} />\r\n      <Cover>\r\n        <MessageText>Message sent successfully </MessageText>\r\n      </Cover>\r\n    </Body>\r\n  )\r\n}\r\n\r\nconst Body = styled.div<ScrollProps>`\r\n  width: 100%;\r\n  max-width: 400px;\r\n  border-radius: 32px;\r\n  height: 160px;\r\n  background: ${RuthTheme.white};\r\n\r\n  color: ${RuthTheme.primary};\r\n  display: flex;\r\n  transition: 0.4s ease-in;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  right: 40px;\r\n  top: 40px;\r\n  z-index: 48;\r\n`\r\nconst Cover = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\nconst MessageText = styled(LightTinySub)`\r\n  color: ${RuthTheme.primary};\r\n`\r\n\r\nconst CloseIcon = styled(VscChromeClose)`\r\n  width: 24px;\r\n  height: 24px;\r\n  color: ${RuthTheme.primary};\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 24px;\r\n  right: 24px;\r\n`\r\nexport default Notification\r\n","import styled from \"styled-components\"\r\nimport { RuthTheme } from \"./ColorStyles\"\r\n\r\nexport const MainInput = styled.input`\r\n  width: 100%;\r\n\r\n  height: 56px;\r\n  max-width: 500px;\r\n  background: ${RuthTheme.primary};\r\n  border: 1px solid ${RuthTheme.white};\r\n  border-radius: 16px;\r\n  outline: none;\r\n  padding: 16px;\r\n  transition: 0.4s ease-in;\r\n  font-family: \"Inter\";\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: 14px;\r\n\r\n  color: ${RuthTheme.white};\r\n\r\n  ::placeholder {\r\n    font-family: \"Inter\";\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    line-height: 14px;\r\n\r\n    color: ${RuthTheme.white};\r\n  }\r\n  :focus {\r\n    outline: none;\r\n  }\r\n  :hover {\r\n    outline: none;\r\n    border: 2px solid ${RuthTheme.white};\r\n  }\r\n`\r\n\r\nexport const MainTextArea = styled.textarea`\r\n  width: 100%;\r\n  padding: 16px;\r\n  height: 400px;\r\n  max-width: 500px;\r\n  background: ${RuthTheme.primary};\r\n  border: 1px solid ${RuthTheme.white};\r\n  border-radius: 16px;\r\n  outline: none;\r\n  transition: 0.4s ease-in;\r\n  font-family: \"Inter\";\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: 14px;\r\n\r\n  color: ${RuthTheme.white};\r\n\r\n  ::placeholder {\r\n    font-family: \"Inter\";\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    line-height: 14px;\r\n\r\n    color: ${RuthTheme.white};\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n  :hover {\r\n    outline: none;\r\n    border: 2px solid ${RuthTheme.white};\r\n  }\r\n`\r\n","import axios, { AxiosResponse } from \"axios\"\r\nimport Loader from \"components/Loader\"\r\nimport Notification from \"components/Notification\"\r\nimport { ContactURL } from \"constants/Constants\"\r\nimport { BodyWrapper } from \"container/Wrapper\"\r\nimport { ChangeEvent, FC, FormEvent, useEffect, useState } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { FormBut } from \"styles/ButtonStyles\"\r\nimport { RuthTheme } from \"styles/ColorStyles\"\r\nimport { MainInput, MainTextArea } from \"styles/InputStyles\"\r\nimport { Header5, TinySub, LightTinySub } from \"styles/TextStyles\"\r\n\r\nconst ContactForm: FC = () => {\r\n  const initial = {\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n  }\r\n  const [form, setForm] = useState(initial)\r\n  const [timer, setTimer] = useState<number>(5)\r\n  const [emailError, setEmailError] = useState<string | null>(null)\r\n  const [nameError, setNameError] = useState<string | null>(null)\r\n  const [messageError, setMessageError] = useState<string | null>(null)\r\n  const [loading, setLoading] = useState<boolean>(false)\r\n  const [sent, setSent] = useState<boolean>(false)\r\n\r\n  const { name, email, message } = form\r\n  const onChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target\r\n    setEmailError(null)\r\n    setNameError(null)\r\n    setMessageError(null)\r\n    setForm({ ...form, [name]: value })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (sent) {\r\n      window.setInterval(() => {\r\n        setTimer((timer) => timer - 1)\r\n\r\n        if (timer === 0) {\r\n          setSent(false)\r\n        }\r\n      }, 1000)\r\n    }\r\n  }, [timer, sent])\r\n\r\n  const onSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n\r\n    if (\r\n      message.trim() === \"\" ||\r\n      name.trim() === \"\" ||\r\n      !email.includes(\"@\") ||\r\n      email.trim() === \"\"\r\n    ) {\r\n      setLoading(false)\r\n\r\n      if (email.trim() === \"\" && message.trim() === \"\" && name.trim() === \"\") {\r\n        setEmailError(\"Enter Email\")\r\n        setNameError(\"Enter Name\")\r\n        setMessageError(\"Enter Message\")\r\n      } else if (email.trim() === \"\") {\r\n        setEmailError(\"Enter Email\")\r\n      } else if (name.trim() === \"\") {\r\n        setNameError(\"Enter Name\")\r\n      } else if (message.trim() === \"\") {\r\n        setMessageError(\"Enter Message\")\r\n      } else if (!email.includes(\"@\")) {\r\n        setEmailError(\"Please enter valid email\")\r\n      }\r\n    } else {\r\n      axios\r\n        .post(ContactURL, { name, email, message })\r\n        .then((res: AxiosResponse) => {\r\n          setLoading(false)\r\n          setForm(initial)\r\n          setSent(true)\r\n        })\r\n        .catch((err: AxiosResponse) => {\r\n          setLoading(false)\r\n        })\r\n    }\r\n  }\r\n  const closeIcon = () => {\r\n    setSent(false)\r\n  }\r\n\r\n  return (\r\n    <Body>\r\n      {sent && <Notification close={closeIcon} />}\r\n      <Wrapper>\r\n        <FormTitle>\r\n          <Title>\r\n            Send me a message/mail directly at contact@ruth or through the form\r\n            below. Talk to you soon!\r\n          </Title>\r\n\r\n          <FormCover>\r\n            <FormBody onSubmit={onSubmit}>\r\n              <FormWrapper>\r\n                <FormLabel htmlFor=\"name\">\r\n                  <FormText>Name</FormText>\r\n                </FormLabel>\r\n                <FormInput\r\n                  id=\"name\"\r\n                  value={name}\r\n                  onChange={onChange}\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Your name\"\r\n                />\r\n                {nameError && (\r\n                  <Error>\r\n                    <ErrorText>{nameError}</ErrorText>\r\n                  </Error>\r\n                )}\r\n              </FormWrapper>\r\n              <FormWrapper>\r\n                <FormLabel htmlFor=\"email\">\r\n                  <FormText>Email</FormText>\r\n                </FormLabel>\r\n                <FormInput\r\n                  id=\"email\"\r\n                  value={email}\r\n                  onChange={onChange}\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Your email\"\r\n                />\r\n                {emailError && (\r\n                  <Error>\r\n                    <ErrorText>{emailError}</ErrorText>\r\n                  </Error>\r\n                )}\r\n              </FormWrapper>\r\n              <FormWrapper>\r\n                <FormLabel htmlFor=\"message\">\r\n                  <FormText>Message</FormText>\r\n                </FormLabel>\r\n                <FormTextArea\r\n                  id=\"message\"\r\n                  value={message}\r\n                  onChange={onChange}\r\n                  name=\"message\"\r\n                  placeholder=\"Your message\"\r\n                />\r\n                {messageError && (\r\n                  <Error>\r\n                    <ErrorText>{messageError}</ErrorText>\r\n                  </Error>\r\n                )}\r\n              </FormWrapper>\r\n              <FormWrap>\r\n                <FormButton>{loading ? <Loader /> : \"Submit\"}</FormButton>\r\n              </FormWrap>\r\n            </FormBody>\r\n          </FormCover>\r\n        </FormTitle>\r\n      </Wrapper>\r\n    </Body>\r\n  )\r\n}\r\n\r\nconst Body = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 40px 0;\r\n`\r\n\r\nconst Wrapper = styled(BodyWrapper)`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst FormTitle = styled.div`\r\n  color: ${RuthTheme.white};\r\n  max-width: 900px;\r\n  width: 100%;\r\n\r\n  margin: 32px auto;\r\n`\r\nconst Title = styled(Header5)`\r\n  text-align: center;\r\n`\r\nconst FormCover = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  max-width: 500px;\r\n  margin: 24px auto;\r\n`\r\nconst FormBody = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n`\r\nconst FormWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  margin: 16px 0;\r\n  color: ${RuthTheme.white};\r\n`\r\nconst FormLabel = styled.label`\r\n  width: 100%;\r\n  margin: 16px 0;\r\n  cursor: pointer;\r\n`\r\nconst FormText = styled(TinySub)``\r\nconst FormInput = styled(MainInput)`\r\n  margin: 0 0 8px 0;\r\n`\r\nconst FormTextArea = styled(MainTextArea)`\r\n  margin: 0 0 8px 0;\r\n`\r\nconst FormWrap = styled.div`\r\n  max-width: 500px;\r\n  width: 100%;\r\n  margin: 40px auto;\r\n`\r\nconst FormButton = styled(FormBut)``\r\nconst Error = styled.span`\r\n  margin: 0;\r\n  width: 100%;\r\n  text-align: left;\r\n  color: ${RuthTheme.secondary};\r\n`\r\nconst ErrorText = styled(LightTinySub)``\r\nexport default ContactForm\r\n","import Navbar from \"components/Navbar\"\r\nimport { FC } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { RuthTheme } from \"styles/ColorStyles\"\r\n\r\nconst ContactHero: FC = () => {\r\n  return (\r\n    <Body>\r\n      <Navbar />\r\n      <Cover>\r\n        <ContactText>Ready to</ContactText>\r\n        <ContactText>contact me?</ContactText>\r\n      </Cover>\r\n    </Body>\r\n  )\r\n}\r\n\r\nconst Body = styled.div`\r\n  height: 550px;\r\n  width: 100%;\r\n  background: ${RuthTheme.secondary};\r\n  color: ${RuthTheme.white};\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  position: relative;\r\n  align-items: center;\r\n`\r\nconst Cover = styled.div`\r\n  max-width: 1280px;\r\n  padding: 16px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n`\r\n\r\nconst ContactText = styled.h1`\r\n  max-width: 650px;\r\n  font-family: \"Neue Machina Bold\";\r\n  font-size: 96px;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  position: relative;\r\n  line-height: 1.4;\r\n  ::after {\r\n    position: absolute;\r\n    content: \"\";\r\n    width: 100%;\r\n    bottom: 3px;\r\n    left: 0;\r\n    height: 6px;\r\n    background: ${RuthTheme.white};\r\n  }\r\n  @media only screen and (max-width: 650px) {\r\n    font-size: 48px;\r\n  }\r\n  @media only screen and (max-width: 450px) {\r\n    font-size: 36px;\r\n  }\r\n`\r\nexport default ContactHero\r\n","import ContactForm from \"components/contact/ContactForm\"\r\nimport ContactHero from \"components/contact/ContactHero\"\r\n\r\nimport { FC, useEffect } from \"react\"\r\n\r\nimport styled from \"styled-components\"\r\n\r\nconst Contact: FC = () => {\r\n  useEffect(() => {\r\n    document.title = \"Contact Me - RUth Ikegah\"\r\n  }, [])\r\n\r\n  return (\r\n    <Body>\r\n      <ContactHero />\r\n      <ContactForm />\r\n    </Body>\r\n  )\r\n}\r\n\r\nconst Body = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nexport default Contact\r\n","import styled from \"styled-components\"\r\nimport { RuthTheme } from \"./ColorStyles\"\r\n\r\nexport const MainButton = styled.button`\r\n  height: 64px;\r\n  width: 100%;\r\n  max-width: 270px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 40px;\r\n  border: none;\r\n  outline: none;\r\n  font-family: \"Inter\";\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  line-height: 18px;\r\n\r\n  padding: 23px 40px;\r\n  background: ${RuthTheme.secondary};\r\n  color: ${RuthTheme.black};\r\n  transition: all 0.3s ease-in;\r\n\r\n  :hover {\r\n    background: ${RuthTheme.white};\r\n  }\r\n  @media only screen and (max-width: 650px) {\r\n    font-size: 15px;\r\n  }\r\n`\r\n\r\nexport const BlogButton = styled.a`\r\n  height: 64px;\r\n  width: 100%;\r\n  max-width: 270px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 40px;\r\n  border: none;\r\n  outline: none;\r\n  font-family: \"Inter\";\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  line-height: 18px;\r\n\r\n  padding: 23px 40px;\r\n  background: ${RuthTheme.secondary};\r\n  color: ${RuthTheme.black};\r\n  transition: all 0.3s ease-in;\r\n\r\n  :hover {\r\n    background: ${RuthTheme.white};\r\n  }\r\n  @media only screen and (max-width: 650px) {\r\n    font-size: 15px;\r\n  }\r\n`\r\nexport const FormBut = styled.button`\r\n  height: 64px;\r\n  max-width: 500px;\r\n  width: 100%;\r\n\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 40px;\r\n  border: none;\r\n  outline: none;\r\n  font-family: \"Inter\";\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  line-height: 18px;\r\n\r\n  padding: 23px 40px;\r\n  background: ${RuthTheme.secondary};\r\n  color: ${RuthTheme.black};\r\n  transition: all 0.3s ease-in;\r\n\r\n  :hover {\r\n    background: ${RuthTheme.white};\r\n  }\r\n  @media only screen and (max-width: 650px) {\r\n    font-size: 15px;\r\n  }\r\n`\r\n\r\nexport const BorderButton = styled.a`\r\n  height: 56px;\r\n  width: 100%;\r\n  max-width: 160px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 40px;\r\n  border: none;\r\n  outline: none;\r\n  font-family: \"Inter\";\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  line-height: 18px;\r\n\r\n  padding: 23px 40px;\r\n  background: transparent;\r\n  color: ${RuthTheme.white};\r\n  border: 1px solid ${RuthTheme.white};\r\n  transition: all 0.3s ease-in;\r\n\r\n  :hover {\r\n    background: ${RuthTheme.white};\r\n    color: ${RuthTheme.primary};\r\n  }\r\n  @media only screen and (max-width: 650px) {\r\n    font-size: 15px;\r\n  }\r\n`\r\n","export default __webpack_public_path__ + \"static/media/logo.f5ae31b6.svg\";","import { FC, useEffect, useState } from \"react\"\r\nimport { Link, NavLink, useLocation } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\nimport { RuthTheme } from \"styles/ColorStyles\"\r\nimport { TinySub } from \"styles/TextStyles\"\r\nimport logo from \"images/logo.svg\"\r\n\r\ninterface NavbarProps {\r\n  toggle: any\r\n}\r\nconst Navbar: FC = () => {\r\n  const [menu, setMenu] = useState<boolean>(false)\r\n\r\n  const location = useLocation()\r\n  useEffect(() => {\r\n    setMenu(false)\r\n  }, [location])\r\n\r\n  const clickToggle = () => {\r\n    setMenu(!menu)\r\n  }\r\n  return (\r\n    <Body>\r\n      <Cover>\r\n        <NavLogo>\r\n          <Link to=\"/\">\r\n            <Logo src={logo} alt=\"Ruth Ikegah Logo\" />\r\n            <LogoText>Developer Advocate + GitHub Star </LogoText>\r\n          </Link>\r\n        </NavLogo>\r\n        <NavLinks toggle={menu}>\r\n          <NavUL>\r\n            <NavLink to=\"/works\">\r\n              <NavLI>Work/Speaking</NavLI>\r\n            </NavLink>\r\n            <NavLink to=\"/about\">\r\n              <NavLI>About</NavLI>\r\n            </NavLink>\r\n            <a\r\n              href=\"https://ruthikegah.xyz/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <NavLI>Blog</NavLI>\r\n            </a>\r\n            <NavLink to=\"/contact\">\r\n              <NavLI>Contact</NavLI>\r\n            </NavLink>\r\n          </NavUL>\r\n        </NavLinks>\r\n        <MobileToggle onClick={clickToggle}>\r\n          <MobileCover>\r\n            <TopTog toggle={menu} />\r\n            <MiddleTog toggle={menu} />\r\n            <BottomTog toggle={menu} />\r\n          </MobileCover>\r\n        </MobileToggle>\r\n      </Cover>\r\n    </Body>\r\n  )\r\n}\r\n\r\nconst Body = styled.nav`\r\n  position: absolute;\r\n  z-index: 40;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 64px;\r\n  background: transparent;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`\r\nconst Cover = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 1280px;\r\n  margin: 0 auto;\r\n  padding: 16px;\r\n`\r\n\r\nconst MobileToggle = styled.div`\r\n  position: fixed;\r\n  width: 40px;\r\n  height: 20px;\r\n  right: 16px;\r\n  top: 32px;\r\n  display: none;\r\n\r\n  z-index: 53;\r\n  @media only screen and (max-width: 800px) {\r\n    display: flex;\r\n  }\r\n`\r\nconst MobileCover = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 32px;\r\n  height: 20px;\r\n\r\n  cursor: pointer;\r\n  transition: 0.4s ease-in;\r\n`\r\nconst TopTog = styled.span<NavbarProps>`\r\n  width: 28px;\r\n  height: 2px;\r\n  background: ${RuthTheme.white};\r\n  border-radius: 10px;\r\n  transition: 0.4s ease-in;\r\n  cursor: pointer;\r\n  transform: ${(props) =>\r\n    props.toggle ? \" rotate(45deg) translate(-5px,6px)\" : \"rotate(0)\"};\r\n`\r\nconst MiddleTog = styled.span<NavbarProps>`\r\n  width: 28px;\r\n  height: 2px;\r\n  transition: 0.4s ease-in;\r\n  background: ${RuthTheme.white};\r\n  margin: 4px 0;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  display: ${(props) => (props.toggle ? \"none\" : \"flex\")};\r\n`\r\nconst BottomTog = styled.span<NavbarProps>`\r\n  width: 28px;\r\n  height: 2px;\r\n  background: ${RuthTheme.white};\r\n  border-radius: 10px;\r\n  transition: 0.4s ease-in;\r\n  cursor: pointer;\r\n  transform: ${(props) =>\r\n    props.toggle ? \" rotate(-45deg) translate(-5px,-6px)\" : \"rotate(0)\"};\r\n`\r\nconst NavLogo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n\r\n  a {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n  }\r\n`\r\nconst Logo = styled.img`\r\n  height: 40px;\r\n  width: 105px;\r\n`\r\nconst LogoText = styled(TinySub)`\r\n  color: ${RuthTheme.white};\r\n`\r\nconst NavLinks = styled.div<NavbarProps>`\r\n  @media only screen and (max-width: 800px) {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    transition: 0.4s ease-in;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 24px;\r\n    background: ${RuthTheme.primary};\r\n    z-index: 50;\r\n    transform: ${(props) =>\r\n      props.toggle ? \"translateY(0px)\" : \"translateY(-2000px)\"};\r\n    /* align-items: center; */\r\n  }\r\n`\r\nconst NavUL = styled.ul`\r\n  display: flex;\r\n  flex-direction: row;\r\n  a {\r\n    margin: 8px;\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    flex-direction: column;\r\n  }\r\n`\r\nconst NavLI = styled.li`\r\n  height: 40px;\r\n  max-width: 209px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 40px;\r\n  padding: 11px 34px;\r\n  border: 0.5px solid ${RuthTheme.white};\r\n  transition: 0.4s ease-in;\r\n  color: ${RuthTheme.white};\r\n  font-family: \"Neue Machina Bold\";\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 18px;\r\n  background: transparent;\r\n\r\n  :hover {\r\n    color: ${RuthTheme.primary};\r\n    background: ${RuthTheme.white};\r\n  }\r\n`\r\nexport default Navbar\r\n","export const host =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? \"http://127.0.0.1:8000/\"\r\n    : \"https://api.ruthikegah.com/\"\r\n\r\nexport const HomeWorkDataURL = `${host}api/home-work/`\r\nexport const WorkDataURL = `${host}api/work/`\r\nexport const WorkDetailURL = (slug: any) => `${host}api/work/${slug}/`\r\nexport const ContactURL = `${host}api/contact/`\r\n","import styled from \"styled-components\"\r\n\r\nexport const BodyWrapper = styled.div`\r\n  max-width: 1280px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  padding: 16px;\r\n`\r\n"],"sourceRoot":""}