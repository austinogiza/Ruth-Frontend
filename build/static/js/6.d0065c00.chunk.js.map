{"version":3,"sources":["components/Loader.tsx","components/Notification.tsx","styles/InputStyles.tsx","components/contact/ContactForm.tsx","components/contact/ContactHero.tsx","pages/Contact.tsx","styles/ButtonStyles.tsx","images/logo.svg","components/Navbar.tsx","constants/Constants.tsx","container/Wrapper.tsx"],"names":["Loader","radius","color","stroke","visible","Body","styled","div","RuthTheme","white","primary","Cover","MessageText","LightTinySub","CloseIcon","VscChromeClose","Notification","props","close","useState","scroll","setScroll","useEffect","window","addEventListener","scrollY","pageYOffset","onClick","MainInput","input","MainTextArea","textarea","ContactForm","initial","name","email","message","form","setForm","timer","setTimer","emailError","setEmailError","nameError","setNameError","messageError","setMessageError","loading","setLoading","sent","setSent","onChange","e","target","value","setInterval","FormTitle","Title","FormCover","FormBody","onSubmit","preventDefault","trim","includes","axios","post","ContactURL","then","res","catch","err","FormWrapper","FormLabel","htmlFor","FormText","FormInput","id","type","placeholder","Error","ErrorText","FormTextArea","FormWrap","FormButton","Wrapper","BodyWrapper","Header5","label","TinySub","FormBut","span","secondary","React","memo","ContactHero","Navbar","ContactText","h1","Contact","document","title","MainButton","button","black","BlogButton","a","BorderButton","menu","setMenu","location","useLocation","NavLogo","to","Logo","src","logo","alt","LogoText","NavLinks","toggle","NavUL","NavLI","href","rel","MobileToggle","MobileCover","TopTog","MiddleTog","BottomTog","nav","img","ul","li","host","HomeWorkDataURL","WorkDataURL","WorkDetailURL","slug"],"mappings":"oPAWeA,EARA,WACb,OACE,8BACE,cAAC,IAAD,CAASC,OAAQ,GAAIC,MAAO,OAAQC,OAAQ,EAAGC,SAAS,O,gCC8BxDC,EAAOC,IAAOC,IAAV,oTAKMC,IAAUC,MAEfD,IAAUE,SAUfC,EAAQL,IAAOC,IAAV,kGAKLK,EAAcN,YAAOO,IAAPP,CAAH,0CACNE,IAAUE,SAGfI,EAAYR,YAAOS,IAAPT,CAAH,oJAGJE,IAAUE,SAMNM,EA3DqB,SAACC,GAAW,IACtCC,EAAUD,EAAVC,MADqC,EAEjBC,oBAAkB,GAFD,mBAEtCC,EAFsC,KAE9BC,EAF8B,KAc7C,OAVAC,qBAAU,WACRC,OAAOC,iBAAiB,UAAU,WAC5BD,OAAOE,QAAU,KAAOF,OAAOG,YAAc,IAC/CL,GAAU,GAEVA,GAAU,QAGb,IAGD,eAAChB,EAAD,CAAMe,OAAQA,EAAd,UACE,cAACN,EAAD,CAAWa,QAAST,IACpB,cAACP,EAAD,UACE,cAACC,EAAD,+C,wBC3BKgB,EAAYtB,IAAOuB,MAAV,smBAKNrB,IAAUE,QACJF,IAAUC,MAWrBD,IAAUC,MASRD,IAAUC,MAOCD,IAAUC,OAIrBqB,EAAexB,IAAOyB,SAAV,umBAKTvB,IAAUE,QACJF,IAAUC,MAUrBD,IAAUC,MASRD,IAAUC,MAQCD,IAAUC,OC7D5BuB,GAAkB,WACtB,IAAMC,EAAU,CACdC,KAAM,GACNC,MAAO,GACPC,QAAS,IAJiB,EAMJjB,mBAASc,GANL,mBAMrBI,EANqB,KAMfC,EANe,OAOFnB,mBAAiB,GAPf,mBAOrBoB,EAPqB,KAOdC,EAPc,OAQQrB,mBAAwB,MARhC,mBAQrBsB,EARqB,KAQTC,EARS,OASMvB,mBAAwB,MAT9B,mBASrBwB,EATqB,KASVC,EATU,OAUYzB,mBAAwB,MAVpC,mBAUrB0B,EAVqB,KAUPC,EAVO,OAWE3B,oBAAkB,GAXpB,mBAWrB4B,EAXqB,KAWZC,EAXY,OAYJ7B,oBAAkB,GAZd,mBAYrB8B,EAZqB,KAYfC,EAZe,KAcpBhB,EAAyBG,EAAzBH,KAAMC,EAAmBE,EAAnBF,MAAOC,EAAYC,EAAZD,QACfe,EAAW,SAACC,GAA4D,IAAD,EACnDA,EAAEC,OAAlBnB,EADmE,EACnEA,KAAMoB,EAD6D,EAC7DA,MACdZ,EAAc,MACdE,EAAa,MACbE,EAAgB,MAChBR,EAAQ,2BAAKD,GAAN,kBAAaH,EAAOoB,MAG7BhC,qBAAU,WACJ2B,GACF1B,OAAOgC,aAAY,WACjBf,GAAS,SAACD,GAAD,OAAWA,EAAQ,KAEd,IAAVA,GACFW,GAAQ,KAET,OAEJ,CAACX,EAAOU,IA4CX,OACE,eAAC,GAAD,WACGA,GAAQ,cAAC,EAAD,CAAc/B,MANT,WAChBgC,GAAQ,MAMN,cAAC,GAAD,UACE,eAACM,GAAD,WACE,cAACC,GAAD,2GAKA,cAACC,GAAD,UACE,eAACC,GAAD,CAAUC,SArDH,SAACR,GAChBA,EAAES,iBACFb,GAAW,GAGU,KAAnBZ,EAAQ0B,QACQ,KAAhB5B,EAAK4B,QACJ3B,EAAM4B,SAAS,MACC,KAAjB5B,EAAM2B,OAkBNE,IACGC,KAAKC,IAAY,CAAEhC,OAAMC,QAAOC,YAChC+B,MAAK,SAACC,GACLpB,GAAW,GACXV,EAAQL,GACRiB,GAAQ,MAETmB,OAAM,SAACC,GACNtB,GAAW,OAxBfA,GAAW,GAEU,KAAjBb,EAAM2B,QAAoC,KAAnB1B,EAAQ0B,QAAiC,KAAhB5B,EAAK4B,QACvDpB,EAAc,eACdE,EAAa,cACbE,EAAgB,kBACU,KAAjBX,EAAM2B,OACfpB,EAAc,eACW,KAAhBR,EAAK4B,OACdlB,EAAa,cACe,KAAnBR,EAAQ0B,OACjBhB,EAAgB,iBACNX,EAAM4B,SAAS,MACzBrB,EAAc,8BA8BV,UACE,eAAC6B,GAAD,WACE,cAACC,GAAD,CAAWC,QAAQ,OAAnB,SACE,cAACC,GAAD,qBAEF,cAACC,GAAD,CACEC,GAAG,OACHtB,MAAOpB,EACPiB,SAAUA,EACVjB,KAAK,OACL2C,KAAK,OACLC,YAAY,cAEbnC,GACC,cAACoC,GAAD,UACE,cAACC,GAAD,UAAYrC,SAIlB,eAAC4B,GAAD,WACE,cAACC,GAAD,CAAWC,QAAQ,QAAnB,SACE,cAACC,GAAD,sBAEF,cAACC,GAAD,CACEC,GAAG,QACHtB,MAAOnB,EACPgB,SAAUA,EACVjB,KAAK,QACL2C,KAAK,QACLC,YAAY,eAEbrC,GACC,cAACsC,GAAD,UACE,cAACC,GAAD,UAAYvC,SAIlB,eAAC8B,GAAD,WACE,cAACC,GAAD,CAAWC,QAAQ,UAAnB,SACE,cAACC,GAAD,wBAEF,cAACO,GAAD,CACEL,GAAG,UACHtB,MAAOlB,EACPe,SAAUA,EACVjB,KAAK,UACL4C,YAAY,iBAEbjC,GACC,cAACkC,GAAD,UACE,cAACC,GAAD,UAAYnC,SAIlB,cAACqC,GAAD,UACE,cAACC,GAAD,UAAapC,EAAU,cAAC,EAAD,IAAa,2BAU9C1C,GAAOC,IAAOC,IAAV,qIAQJ6E,GAAU9E,YAAO+E,IAAP/E,CAAH,yEAKPkD,GAAYlD,IAAOC,IAAV,uGACJC,IAAUC,OAMfgD,GAAQnD,YAAOgF,IAAPhF,CAAH,mDAGLoD,GAAYpD,IAAOC,IAAV,0LAUToD,GAAWrD,IAAO+B,KAAV,6IAORkC,GAAcjE,IAAOC,IAAV,kLAONC,IAAUC,OAEf+D,GAAYlE,IAAOiF,MAAV,mFAKTb,GAAWpE,YAAOkF,IAAPlF,CAAH,0BACRqE,GAAYrE,YAAOsB,EAAPtB,CAAH,kDAGT2E,GAAe3E,YAAOwB,EAAPxB,CAAH,kDAGZ4E,GAAW5E,IAAOC,IAAV,uFAKR4E,GAAa7E,YAAOmF,IAAPnF,CAAH,0BACVyE,GAAQzE,IAAOoF,KAAV,6FAIAlF,IAAUmF,WAEfX,GAAY1E,YAAOO,IAAPP,CAAH,0BACAsF,OAAMC,KAAK7D,I,SC1OpB8D,GAAkB,WACtB,OACE,eAAC,GAAD,WACE,cAACC,GAAA,EAAD,IACA,eAAC,GAAD,WACE,cAACC,GAAD,uBACA,cAACA,GAAD,iCAMF3F,GAAOC,IAAOC,IAAV,yQAGMC,IAAUmF,UACfnF,IAAUC,OASfE,GAAQL,IAAOC,IAAV,4MAWLyF,GAAc1F,IAAO2F,GAAV,4eAeCzF,IAAUC,OASbmF,OAAMC,KAAKC,IC1DpBI,GAAc,WAKlB,OAJA5E,qBAAU,WACR6E,SAASC,MAAQ,6BAChB,IAGD,eAAC,GAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,QAKA/F,GAAOC,IAAOC,IAAV,0GAOKqF,cAAMC,KAAKK,K,0MCxBbG,EAAa/F,IAAOgG,OAAV,6jBAmBP9F,IAAUmF,UACfnF,IAAU+F,MAIH/F,IAAUC,OAOf+F,EAAalG,IAAOmG,EAAV,6jBAmBPjG,IAAUmF,UACfnF,IAAU+F,MAIH/F,IAAUC,OAMfgF,EAAUnF,IAAOgG,OAAV,+jBAoBJ9F,IAAUmF,UACfnF,IAAU+F,MAIH/F,IAAUC,OAOfiG,EAAepG,IAAOmG,EAAV,gnBAoBdjG,IAAUC,MACCD,IAAUC,MAIdD,IAAUC,MACfD,IAAUE,U,mIC1HR,MAA0B,iC,OCUnCqF,EAAa,WAAO,IAAD,EACC5E,oBAAkB,GADnB,mBAChBwF,EADgB,KACVC,EADU,KAGjBC,EAAWC,cACjBxF,qBAAU,WACRsF,GAAQ,KACP,CAACC,IAKJ,OACE,cAACxG,EAAD,UACE,eAACM,EAAD,WACE,cAACoG,EAAD,UACE,eAAC,IAAD,CAAMC,GAAG,IAAT,UACE,cAACC,EAAD,CAAMC,IAAKC,EAAMC,IAAI,qBACrB,cAACC,EAAD,qDAGJ,cAACC,EAAD,CAAUC,OAAQZ,EAAlB,SACE,eAACa,EAAD,WACE,cAAC,IAAD,CAASR,GAAG,SAAZ,SACE,cAACS,EAAD,8BAEF,cAAC,IAAD,CAAST,GAAG,SAAZ,SACE,cAACS,EAAD,sBAEF,mBACEC,KAAK,0BACLrE,OAAO,SACPsE,IAAI,sBAHN,SAKE,cAACF,EAAD,qBAEF,cAAC,IAAD,CAAST,GAAG,WAAZ,SACE,cAACS,EAAD,6BAIN,cAACG,EAAD,CAAcjG,QAhCA,WAClBiF,GAASD,IA+BL,SACE,eAACkB,EAAD,WACE,cAACC,EAAD,CAAQP,OAAQZ,IAChB,cAACoB,EAAD,CAAWR,OAAQZ,IACnB,cAACqB,EAAD,CAAWT,OAAQZ,eAQzBtG,EAAOC,IAAO2H,IAAV,yPAaJtH,EAAQL,IAAOC,IAAV,4MAWLqH,EAAetH,IAAOC,IAAV,2NAaZsH,EAAcvH,IAAOC,IAAV,6JASXuH,EAASxH,IAAOoF,KAAV,2KAGIlF,IAAUC,OAIX,SAACQ,GAAD,OACXA,EAAMsG,OAAS,qCAAuC,eAEpDQ,EAAYzH,IAAOoF,KAAV,2LAIClF,IAAUC,OAIb,SAACQ,GAAD,OAAYA,EAAMsG,OAAS,OAAS,UAE3CS,EAAY1H,IAAOoF,KAAV,2KAGClF,IAAUC,OAIX,SAACQ,GAAD,OACXA,EAAMsG,OAAS,uCAAyC,eAEtDR,EAAUzG,IAAOC,IAAV,4PAaP0G,EAAO3G,IAAO4H,IAAV,8DAIJb,EAAW/G,YAAOkF,IAAPlF,CAAH,0CACHE,IAAUC,OAEf6G,EAAWhH,IAAOC,IAAV,4WAWIC,IAAUE,SAEX,SAACO,GAAD,OACXA,EAAMsG,OAAS,kBAAoB,yBAInCC,EAAQlH,IAAO6H,GAAV,uLAWLV,EAAQnH,IAAO8H,GAAV,+dASa5H,IAAUC,MAEvBD,IAAUC,MASRD,IAAUE,QACLF,IAAUC,OAGbmF,QAAMC,KAAKE,I,gCCnN1B,wIAAO,IAAMsC,EAGP,8BAEOC,EAAe,UAAMD,EAAN,kBACfE,EAAW,UAAMF,EAAN,aACXG,EAAgB,SAACC,GAAD,gBAAkBJ,EAAlB,oBAAkCI,EAAlC,MAChBvE,EAAU,UAAMmE,EAAN,iB,+ECNVhD,E,KAAc/E,EAAOC,IAAV","file":"static/js/6.d0065c00.chunk.js","sourcesContent":["import Spinner from \"react-spinner-material\"\r\nimport React from \"react\"\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div>\r\n      <Spinner radius={24} color={\"#333\"} stroke={2} visible={true} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React, { FC, useEffect, useState } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { RuthTheme } from \"styles/ColorStyles\"\r\nimport { LightTinySub } from \"styles/TextStyles\"\r\nimport { VscChromeClose } from \"react-icons/vsc\"\r\ninterface NotiProps {\r\n  close: () => void\r\n}\r\n\r\ninterface ScrollProps {\r\n  scroll: any\r\n}\r\nconst Notification: FC<NotiProps> = (props) => {\r\n  const { close } = props\r\n  const [scroll, setScroll] = useState<boolean>(false)\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 400 || window.pageYOffset > 400) {\r\n        setScroll(true)\r\n      } else {\r\n        setScroll(false)\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <Body scroll={scroll}>\r\n      <CloseIcon onClick={close} />\r\n      <Cover>\r\n        <MessageText>Message sent successfully </MessageText>\r\n      </Cover>\r\n    </Body>\r\n  )\r\n}\r\n\r\nconst Body = styled.div<ScrollProps>`\r\n  width: 100%;\r\n  max-width: 400px;\r\n  border-radius: 32px;\r\n  height: 160px;\r\n  background: ${RuthTheme.white};\r\n\r\n  color: ${RuthTheme.primary};\r\n  display: flex;\r\n  transition: 0.4s ease-in;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  right: 40px;\r\n  top: 40px;\r\n  z-index: 48;\r\n`\r\nconst Cover = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\nconst MessageText = styled(LightTinySub)`\r\n  color: ${RuthTheme.primary};\r\n`\r\n\r\nconst CloseIcon = styled(VscChromeClose)`\r\n  width: 24px;\r\n  height: 24px;\r\n  color: ${RuthTheme.primary};\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 24px;\r\n  right: 24px;\r\n`\r\nexport default Notification\r\n","import styled from \"styled-components\"\r\nimport { RuthTheme } from \"./ColorStyles\"\r\n\r\nexport const MainInput = styled.input`\r\n  width: 100%;\r\n\r\n  height: 56px;\r\n  max-width: 500px;\r\n  background: ${RuthTheme.primary};\r\n  border: 1px solid ${RuthTheme.white};\r\n  border-radius: 16px;\r\n  outline: none;\r\n  padding: 16px;\r\n  transition: 0.4s ease-in;\r\n  font-family: \"Inter\";\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: 14px;\r\n\r\n  color: ${RuthTheme.white};\r\n\r\n  ::placeholder {\r\n    font-family: \"Inter\";\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    line-height: 14px;\r\n\r\n    color: ${RuthTheme.white};\r\n  }\r\n  :focus {\r\n    outline: none;\r\n  }\r\n  :hover {\r\n    outline: none;\r\n    border: 2px solid ${RuthTheme.white};\r\n  }\r\n`\r\n\r\nexport const MainTextArea = styled.textarea`\r\n  width: 100%;\r\n  padding: 16px;\r\n  height: 400px;\r\n  max-width: 500px;\r\n  background: ${RuthTheme.primary};\r\n  border: 1px solid ${RuthTheme.white};\r\n  border-radius: 16px;\r\n  outline: none;\r\n  transition: 0.4s ease-in;\r\n  font-family: \"Inter\";\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: 14px;\r\n\r\n  color: ${RuthTheme.white};\r\n\r\n  ::placeholder {\r\n    font-family: \"Inter\";\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    line-height: 14px;\r\n\r\n    color: ${RuthTheme.white};\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n  :hover {\r\n    outline: none;\r\n    border: 2px solid ${RuthTheme.white};\r\n  }\r\n`\r\n","import axios, { AxiosResponse } from \"axios\"\r\nimport Loader from \"components/Loader\"\r\nimport Notification from \"components/Notification\"\r\nimport { ContactURL } from \"constants/Constants\"\r\nimport { BodyWrapper } from \"container/Wrapper\"\r\nimport React, { ChangeEvent, FC, FormEvent, useEffect, useState } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { FormBut } from \"styles/ButtonStyles\"\r\nimport { RuthTheme } from \"styles/ColorStyles\"\r\nimport { MainInput, MainTextArea } from \"styles/InputStyles\"\r\nimport { Header5, TinySub, LightTinySub } from \"styles/TextStyles\"\r\n\r\nconst ContactForm: FC = () => {\r\n  const initial = {\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n  }\r\n  const [form, setForm] = useState(initial)\r\n  const [timer, setTimer] = useState<number>(5)\r\n  const [emailError, setEmailError] = useState<string | null>(null)\r\n  const [nameError, setNameError] = useState<string | null>(null)\r\n  const [messageError, setMessageError] = useState<string | null>(null)\r\n  const [loading, setLoading] = useState<boolean>(false)\r\n  const [sent, setSent] = useState<boolean>(false)\r\n\r\n  const { name, email, message } = form\r\n  const onChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target\r\n    setEmailError(null)\r\n    setNameError(null)\r\n    setMessageError(null)\r\n    setForm({ ...form, [name]: value })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (sent) {\r\n      window.setInterval(() => {\r\n        setTimer((timer) => timer - 1)\r\n\r\n        if (timer === 0) {\r\n          setSent(false)\r\n        }\r\n      }, 1000)\r\n    }\r\n  }, [timer, sent])\r\n\r\n  const onSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n\r\n    if (\r\n      message.trim() === \"\" ||\r\n      name.trim() === \"\" ||\r\n      !email.includes(\"@\") ||\r\n      email.trim() === \"\"\r\n    ) {\r\n      setLoading(false)\r\n\r\n      if (email.trim() === \"\" && message.trim() === \"\" && name.trim() === \"\") {\r\n        setEmailError(\"Enter Email\")\r\n        setNameError(\"Enter Name\")\r\n        setMessageError(\"Enter Message\")\r\n      } else if (email.trim() === \"\") {\r\n        setEmailError(\"Enter Email\")\r\n      } else if (name.trim() === \"\") {\r\n        setNameError(\"Enter Name\")\r\n      } else if (message.trim() === \"\") {\r\n        setMessageError(\"Enter Message\")\r\n      } else if (!email.includes(\"@\")) {\r\n        setEmailError(\"Please enter valid email\")\r\n      }\r\n    } else {\r\n      axios\r\n        .post(ContactURL, { name, email, message })\r\n        .then((res: AxiosResponse) => {\r\n          setLoading(false)\r\n          setForm(initial)\r\n          setSent(true)\r\n        })\r\n        .catch((err: AxiosResponse) => {\r\n          setLoading(false)\r\n        })\r\n    }\r\n  }\r\n  const closeIcon = () => {\r\n    setSent(false)\r\n  }\r\n\r\n  return (\r\n    <Body>\r\n      {sent && <Notification close={closeIcon} />}\r\n      <Wrapper>\r\n        <FormTitle>\r\n          <Title>\r\n            Send me a message/mail directly at contact@ruth or through the form\r\n            below. Talk to you soon!\r\n          </Title>\r\n\r\n          <FormCover>\r\n            <FormBody onSubmit={onSubmit}>\r\n              <FormWrapper>\r\n                <FormLabel htmlFor=\"name\">\r\n                  <FormText>Name</FormText>\r\n                </FormLabel>\r\n                <FormInput\r\n                  id=\"name\"\r\n                  value={name}\r\n                  onChange={onChange}\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Your name\"\r\n                />\r\n                {nameError && (\r\n                  <Error>\r\n                    <ErrorText>{nameError}</ErrorText>\r\n                  </Error>\r\n                )}\r\n              </FormWrapper>\r\n              <FormWrapper>\r\n                <FormLabel htmlFor=\"email\">\r\n                  <FormText>Email</FormText>\r\n                </FormLabel>\r\n                <FormInput\r\n                  id=\"email\"\r\n                  value={email}\r\n                  onChange={onChange}\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Your email\"\r\n                />\r\n                {emailError && (\r\n                  <Error>\r\n                    <ErrorText>{emailError}</ErrorText>\r\n                  </Error>\r\n                )}\r\n              </FormWrapper>\r\n              <FormWrapper>\r\n                <FormLabel htmlFor=\"message\">\r\n                  <FormText>Message</FormText>\r\n                </FormLabel>\r\n                <FormTextArea\r\n                  id=\"message\"\r\n                  value={message}\r\n                  onChange={onChange}\r\n                  name=\"message\"\r\n                  placeholder=\"Your message\"\r\n                />\r\n                {messageError && (\r\n                  <Error>\r\n                    <ErrorText>{messageError}</ErrorText>\r\n                  </Error>\r\n                )}\r\n              </FormWrapper>\r\n              <FormWrap>\r\n                <FormButton>{loading ? <Loader /> : \"Submit\"}</FormButton>\r\n              </FormWrap>\r\n            </FormBody>\r\n          </FormCover>\r\n        </FormTitle>\r\n      </Wrapper>\r\n    </Body>\r\n  )\r\n}\r\n\r\nconst Body = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 40px 0;\r\n`\r\n\r\nconst Wrapper = styled(BodyWrapper)`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst FormTitle = styled.div`\r\n  color: ${RuthTheme.white};\r\n  max-width: 900px;\r\n  width: 100%;\r\n\r\n  margin: 32px auto;\r\n`\r\nconst Title = styled(Header5)`\r\n  text-align: center;\r\n`\r\nconst FormCover = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  max-width: 500px;\r\n  margin: 24px auto;\r\n`\r\nconst FormBody = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n`\r\nconst FormWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  margin: 16px 0;\r\n  color: ${RuthTheme.white};\r\n`\r\nconst FormLabel = styled.label`\r\n  width: 100%;\r\n  margin: 16px 0;\r\n  cursor: pointer;\r\n`\r\nconst FormText = styled(TinySub)``\r\nconst FormInput = styled(MainInput)`\r\n  margin: 0 0 8px 0;\r\n`\r\nconst FormTextArea = styled(MainTextArea)`\r\n  margin: 0 0 8px 0;\r\n`\r\nconst FormWrap = styled.div`\r\n  max-width: 500px;\r\n  width: 100%;\r\n  margin: 40px auto;\r\n`\r\nconst FormButton = styled(FormBut)``\r\nconst Error = styled.span`\r\n  margin: 0;\r\n  width: 100%;\r\n  text-align: left;\r\n  color: ${RuthTheme.secondary};\r\n`\r\nconst ErrorText = styled(LightTinySub)``\r\nexport default React.memo(ContactForm)\r\n","import Navbar from \"components/Navbar\"\r\nimport React, { FC } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { RuthTheme } from \"styles/ColorStyles\"\r\n\r\nconst ContactHero: FC = () => {\r\n  return (\r\n    <Body>\r\n      <Navbar />\r\n      <Cover>\r\n        <ContactText>Ready to</ContactText>\r\n        <ContactText>contact me?</ContactText>\r\n      </Cover>\r\n    </Body>\r\n  )\r\n}\r\n\r\nconst Body = styled.div`\r\n  height: 550px;\r\n  width: 100%;\r\n  background: ${RuthTheme.secondary};\r\n  color: ${RuthTheme.white};\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  position: relative;\r\n  align-items: center;\r\n  @media only screen and (max-width: 650px) {\r\n    height: 400px;\r\n  }\r\n`\r\nconst Cover = styled.div`\r\n  max-width: 1280px;\r\n  padding: 16px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n`\r\n\r\nconst ContactText = styled.h1`\r\n  max-width: 650px;\r\n  font-family: \"Neue Machina Bold\";\r\n  font-size: 96px;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  position: relative;\r\n  line-height: 1.4;\r\n  ::after {\r\n    position: absolute;\r\n    content: \"\";\r\n    width: 100%;\r\n    bottom: 3px;\r\n    left: 0;\r\n    height: 6px;\r\n    background: ${RuthTheme.white};\r\n  }\r\n  @media only screen and (max-width: 650px) {\r\n    font-size: 48px;\r\n  }\r\n  @media only screen and (max-width: 450px) {\r\n    font-size: 36px;\r\n  }\r\n`\r\nexport default React.memo(ContactHero)\r\n","import ContactForm from \"components/contact/ContactForm\"\r\nimport ContactHero from \"components/contact/ContactHero\"\r\n\r\nimport React, { FC, useEffect } from \"react\"\r\n\r\nimport styled from \"styled-components\"\r\n\r\nconst Contact: FC = () => {\r\n  useEffect(() => {\r\n    document.title = \"Contact Me - RUth Ikegah\"\r\n  }, [])\r\n\r\n  return (\r\n    <Body>\r\n      <ContactHero />\r\n      <ContactForm />\r\n    </Body>\r\n  )\r\n}\r\n\r\nconst Body = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nexport default React.memo(Contact)\r\n","import styled from \"styled-components\"\r\nimport { RuthTheme } from \"./ColorStyles\"\r\n\r\nexport const MainButton = styled.button`\r\n  height: 64px;\r\n  width: 100%;\r\n  max-width: 270px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 40px;\r\n  border: none;\r\n  outline: none;\r\n  font-family: \"Inter\";\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  line-height: 18px;\r\n\r\n  padding: 23px 40px;\r\n  background: ${RuthTheme.secondary};\r\n  color: ${RuthTheme.black};\r\n  transition: all 0.3s ease-in;\r\n\r\n  :hover {\r\n    background: ${RuthTheme.white};\r\n  }\r\n  @media only screen and (max-width: 650px) {\r\n    font-size: 15px;\r\n  }\r\n`\r\n\r\nexport const BlogButton = styled.a`\r\n  height: 64px;\r\n  width: 100%;\r\n  max-width: 270px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 40px;\r\n  border: none;\r\n  outline: none;\r\n  font-family: \"Inter\";\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  line-height: 18px;\r\n\r\n  padding: 23px 40px;\r\n  background: ${RuthTheme.secondary};\r\n  color: ${RuthTheme.black};\r\n  transition: all 0.3s ease-in;\r\n\r\n  :hover {\r\n    background: ${RuthTheme.white};\r\n  }\r\n  @media only screen and (max-width: 650px) {\r\n    font-size: 15px;\r\n  }\r\n`\r\nexport const FormBut = styled.button`\r\n  height: 64px;\r\n  max-width: 500px;\r\n  width: 100%;\r\n\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 40px;\r\n  border: none;\r\n  outline: none;\r\n  font-family: \"Inter\";\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  line-height: 18px;\r\n\r\n  padding: 23px 40px;\r\n  background: ${RuthTheme.secondary};\r\n  color: ${RuthTheme.black};\r\n  transition: all 0.3s ease-in;\r\n\r\n  :hover {\r\n    background: ${RuthTheme.white};\r\n  }\r\n  @media only screen and (max-width: 650px) {\r\n    font-size: 15px;\r\n  }\r\n`\r\n\r\nexport const BorderButton = styled.a`\r\n  height: 56px;\r\n  width: 100%;\r\n  max-width: 160px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 40px;\r\n  border: none;\r\n  outline: none;\r\n  font-family: \"Inter\";\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  line-height: 18px;\r\n\r\n  padding: 23px 40px;\r\n  background: transparent;\r\n  color: ${RuthTheme.white};\r\n  border: 1px solid ${RuthTheme.white};\r\n  transition: all 0.3s ease-in;\r\n\r\n  :hover {\r\n    background: ${RuthTheme.white};\r\n    color: ${RuthTheme.primary};\r\n  }\r\n  @media only screen and (max-width: 650px) {\r\n    font-size: 15px;\r\n  }\r\n`\r\n","export default __webpack_public_path__ + \"static/media/logo.f5ae31b6.svg\";","import React, { FC, useEffect, useState } from \"react\"\r\nimport { Link, NavLink, useLocation } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\nimport { RuthTheme } from \"styles/ColorStyles\"\r\nimport { TinySub } from \"styles/TextStyles\"\r\nimport logo from \"images/logo.svg\"\r\n\r\ninterface NavbarProps {\r\n  toggle: any\r\n}\r\nconst Navbar: FC = () => {\r\n  const [menu, setMenu] = useState<boolean>(false)\r\n\r\n  const location = useLocation()\r\n  useEffect(() => {\r\n    setMenu(false)\r\n  }, [location])\r\n\r\n  const clickToggle = () => {\r\n    setMenu(!menu)\r\n  }\r\n  return (\r\n    <Body>\r\n      <Cover>\r\n        <NavLogo>\r\n          <Link to=\"/\">\r\n            <Logo src={logo} alt=\"Ruth Ikegah Logo\" />\r\n            <LogoText>Developer Advocate + GitHub Star </LogoText>\r\n          </Link>\r\n        </NavLogo>\r\n        <NavLinks toggle={menu}>\r\n          <NavUL>\r\n            <NavLink to=\"/works\">\r\n              <NavLI>Work/Speaking</NavLI>\r\n            </NavLink>\r\n            <NavLink to=\"/about\">\r\n              <NavLI>About</NavLI>\r\n            </NavLink>\r\n            <a\r\n              href=\"https://ruthikegah.xyz/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <NavLI>Blog</NavLI>\r\n            </a>\r\n            <NavLink to=\"/contact\">\r\n              <NavLI>Contact</NavLI>\r\n            </NavLink>\r\n          </NavUL>\r\n        </NavLinks>\r\n        <MobileToggle onClick={clickToggle}>\r\n          <MobileCover>\r\n            <TopTog toggle={menu} />\r\n            <MiddleTog toggle={menu} />\r\n            <BottomTog toggle={menu} />\r\n          </MobileCover>\r\n        </MobileToggle>\r\n      </Cover>\r\n    </Body>\r\n  )\r\n}\r\n\r\nconst Body = styled.nav`\r\n  position: absolute;\r\n  z-index: 40;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 64px;\r\n  background: transparent;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`\r\nconst Cover = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 1280px;\r\n  margin: 0 auto;\r\n  padding: 16px;\r\n`\r\n\r\nconst MobileToggle = styled.div`\r\n  position: fixed;\r\n  width: 48px;\r\n  height: 20px;\r\n  right: 16px;\r\n  top: 32px;\r\n  display: none;\r\n\r\n  z-index: 63;\r\n  @media only screen and (max-width: 800px) {\r\n    display: flex;\r\n  }\r\n`\r\nconst MobileCover = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 48px;\r\n  height: 20px;\r\n\r\n  cursor: pointer;\r\n  transition: 0.4s ease-in;\r\n`\r\nconst TopTog = styled.span<NavbarProps>`\r\n  width: 48px;\r\n  height: 2px;\r\n  background: ${RuthTheme.white};\r\n  border-radius: 10px;\r\n  transition: 0.4s ease-in;\r\n  cursor: pointer;\r\n  transform: ${(props) =>\r\n    props.toggle ? \" rotate(45deg) translate(-5px,6px)\" : \"rotate(0)\"};\r\n`\r\nconst MiddleTog = styled.span<NavbarProps>`\r\n  width: 48px;\r\n  height: 2px;\r\n  transition: 0.4s ease-in;\r\n  background: ${RuthTheme.white};\r\n  margin: 4px 0;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  display: ${(props) => (props.toggle ? \"none\" : \"flex\")};\r\n`\r\nconst BottomTog = styled.span<NavbarProps>`\r\n  width: 48px;\r\n  height: 2px;\r\n  background: ${RuthTheme.white};\r\n  border-radius: 10px;\r\n  transition: 0.4s ease-in;\r\n  cursor: pointer;\r\n  transform: ${(props) =>\r\n    props.toggle ? \" rotate(-45deg) translate(-5px,-6px)\" : \"rotate(0)\"};\r\n`\r\nconst NavLogo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n\r\n  a {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n  }\r\n`\r\nconst Logo = styled.img`\r\n  height: 40px;\r\n  width: 105px;\r\n`\r\nconst LogoText = styled(TinySub)`\r\n  color: ${RuthTheme.white};\r\n`\r\nconst NavLinks = styled.div<NavbarProps>`\r\n  @media only screen and (max-width: 800px) {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    transition: 0.4s ease-in;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 64px 16px;\r\n    background: ${RuthTheme.primary};\r\n    z-index: 62;\r\n    transform: ${(props) =>\r\n      props.toggle ? \"translateY(0px)\" : \"translateY(-2000px)\"};\r\n    /* align-items: center; */\r\n  }\r\n`\r\nconst NavUL = styled.ul`\r\n  display: flex;\r\n  flex-direction: row;\r\n  a {\r\n    margin: 8px;\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    flex-direction: column;\r\n  }\r\n`\r\nconst NavLI = styled.li`\r\n  height: 40px;\r\n  max-width: 209px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 40px;\r\n  padding: 11px 34px;\r\n  border: 0.8px solid ${RuthTheme.white};\r\n  transition: 0.4s ease-in;\r\n  color: ${RuthTheme.white};\r\n  font-family: \"Neue Machina Bold\";\r\n  font-size: 18px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 18px;\r\n  background: transparent;\r\n\r\n  :hover {\r\n    color: ${RuthTheme.primary};\r\n    background: ${RuthTheme.white};\r\n  }\r\n`\r\nexport default React.memo(Navbar)\r\n","export const host =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? \"http://127.0.0.1:8000/\"\r\n    : \"https://api.ruthikegah.com/\"\r\n\r\nexport const HomeWorkDataURL = `${host}api/home-work/`\r\nexport const WorkDataURL = `${host}api/work/`\r\nexport const WorkDetailURL = (slug: any) => `${host}api/work/${slug}/`\r\nexport const ContactURL = `${host}api/contact/`\r\n","import styled from \"styled-components\"\r\n\r\nexport const BodyWrapper = styled.div`\r\n  max-width: 1280px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  padding: 16px;\r\n`\r\n"],"sourceRoot":""}